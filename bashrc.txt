# Bash Config
# Detect if running as root
if [[ $EUID -eq 0 ]]; then
    # Root configuration
    PROMPT_COLOR='\[\033[38;5;1m\]'      # Red for root
    USER_INDICATOR='root '
    LOCAL_SCRIPTS_PATH="/root/.local/scripts"
    LOGO_PATH="/root/debianroot.png"
    LOGO_PADDING_LEFT=4
    LOGO_PADDING_TOP=2
    TITLE_COLOR_USER=31
    
else
    # Regular user configuration  
    PROMPT_COLOR='\[\033[38;5;49m\]'     # Green for user
    USER_INDICATOR=''
    LOCAL_SCRIPTS_PATH="$HOME/.local/scripts"
    LOGO_PATH="$HOME/Pictures/Logos/debian.png"
    LOGO_PADDING_LEFT=4
    LOGO_PADDING_TOP=2
    TITLE_COLOR_USER=36
    
fi

# Prompt - bash equivalent of your zsh prompts
PS1=' \[\033[38;5;240m\]\w ${PROMPT_COLOR}${USER_INDICATOR}\[\033[38;5;49m\]>\[\033[0m\] '

# Path configuration
if [[ $EUID -eq 0 ]]; then
    # Root: only add local scripts (no .local/bin since root doesn't typically use it)
    export PATH="$LOCAL_SCRIPTS_PATH:$PATH"
else
    # User: add both local scripts and local bin
    export PATH="$LOCAL_SCRIPTS_PATH:$PATH"
fi

# Environment variables (same for both)
export XDG_DATA_DIRS="$HOME/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share:/usr/share"
export EDITOR="vim"
export VISUAL="vim"
export GTK_THEME=Tokyonight-Dark
export XDG_CURRENT_DESKTOP=sway
export XDG_SESSION_DESKTOP=sway

# Common aliases
alias ps='ps aux'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias -- -='cd -'
alias ll='ls -al'

# User-specific functions (only for regular user, not root)
if [[ $EUID -ne 0 ]]; then
    # Configuration management
    update_bash() {
        echo "Updating both user and root .bashrc files..."
        sudo cp ~/.bashrc /root/.bashrc
        echo "✓ Both configs updated"
        echo "Note: Changes will take effect on next shell session or after 'source ~/.bashrc'"
    }

    # Shell Commands
    ii() {
        flatpak run org.gnome.eog "$@" > /dev/null 2>&1 &
    }

    # Services Monitor
    service_status() {
        echo "=== FAILED SERVICES (Critical!) ==="
        systemctl list-units --type=service --state=failed --no-pager
        echo -e "\n=== RUNNING SERVICES ==="
        systemctl list-units --type=service --state=running --no-pager
        echo -e "\n=== EXITED SERVICES (One-shot completed) ==="
        systemctl list-units --type=service --state=exited --no-pager
        echo -e "\n=== INACTIVE SERVICES ==="
        systemctl list-units --type=service --state=inactive --no-pager
        echo "... (showing first 10 inactive services)"
    }

    # Custom snapshot with description
    snap() {
        if [ -z "$1" ]; then 
            echo "Usage: snap <description>"
            echo "Example: snap BaseInstall"
            return 1
        fi
        sudo btrfs subvolume snapshot / "/.snapshots/$1" && \
        echo "✓ Created snapshot: $1"
    }

    # Timestamped snapshot
    snapd() {
        local timestamp=$(date +%Y%m%d-%H%M%S)
        local name="auto-$timestamp"
        sudo btrfs subvolume snapshot / "/.snapshots/$name" && \
        echo "✓ Created timestamped snapshot: $name"
    }

    # List snapshots using native btrfs command
    snapl() {
        sudo btrfs subvolume list /.snapshots
    }

    # Remove snapshot
    snaprm() {
        if [ -z "$1" ]; then
            echo "Usage: snaprm <snapshot_name>"
            echo "Available snapshots:"
            sudo find /.snapshots -maxdepth 1 -type d -printf "  %f\n" | grep -v "^  $"
            return 1
        fi
        if [ ! -d "/.snapshots/$1" ]; then
            echo "Error: Snapshot '$1' does not exist"
            return 1
        fi
        echo "Removing snapshot: $1"
        sudo btrfs subvolume delete "/.snapshots/$1" && \
        echo "✓ Removed snapshot: $1"
    }

    # Show snapshot disk usage
    snapdu() {
        echo "=== Snapshot Disk Usage ==="
        if [ -n "$1" ]; then
            # Show usage for specific snapshot
            echo "Usage for snapshot: $1"
            sudo du -sh "/.snapshots/$1" 2>/dev/null || \
            echo "Snapshot '$1' not found"
        else
            # Show usage for all snapshots
            echo "Individual snapshot sizes:"
            sudo find /.snapshots -maxdepth 1 -type d -name "*" | \
            while read -r dir; do
                if [ "$dir" != "/.snapshots" ]; then
                    local name=$(basename "$dir")
                    local size=$(sudo du -sh "$dir" 2>/dev/null | cut -f1)
                    printf "  %-20s %s\n" "$name" "$size"
                fi
            done
            echo ""
            echo "Total snapshots directory size:"
            sudo du -sh /.snapshots
        fi
    }
fi

# History configuration (bash syntax)
HISTFILE=~/.bash_history
HISTSIZE=10000
HISTFILESIZE=10000
shopt -s histappend
PROMPT_COMMAND="history -a; history -c; history -r; $PROMPT_COMMAND"

# Display configuration and fastfetch
fbset -g 2880 1800 2880 1800 32
clear

if [[ -n "$DISPLAY" || "$XDG_SESSION_TYPE" == "wayland" ]]; then
    # In GUI terminal
    if [[ $EUID -eq 0 ]]; then
        # Root fastfetch
        fastfetch --logo-type sixel \
                  --logo "$LOGO_PATH" \
                  --logo-height 12 \
                  --logo-width 22 \
                  --logo-padding-left $LOGO_PADDING_LEFT \
                  --logo-padding-top $LOGO_PADDING_TOP \
                  --title-color-user $TITLE_COLOR_USER
    else
        # User fastfetch
        fastfetch --logo-type sixel \
                  --logo "$LOGO_PATH" \
                  --logo-height 12 \
                  --logo-width 22 \
                  --logo-padding-left $LOGO_PADDING_LEFT \
                  --logo-padding-top $LOGO_PADDING_TOP \
                  --title-color-user $TITLE_COLOR_USER \
                  --color-keys magenta \
                  --title-color-host magenta
    fi
else
    # In TTY
    if [[ $EUID -eq 0 ]]; then
        # Root TTY
        fastfetch --logo-type none \
                  --color-keys magenta \
                  --title-color-user 36 \
                  --title-color-host magenta
    else
        # User TTY  
        fastfetch --logo-type none \
                  --title-color-user 36
    fi
fi
